@model IEnumerable<IGrouping<string, core2Bowling.Models.YearMonthAvg>>

@{
    ViewData["Title"] = "Index";

    var lstContent = (List<GameTitle>)ViewData["GameContents"];

}


<h2>에버갱신 &nbsp;&nbsp;<small><i class="glyphicon glyphicon glyphicon-hand-right"></i> 1년간의 자료로 에버를 갱신합니다.(6월 부터 기록)</small></h2>
<hr />



<form asp-action="CalYearAvg" method="get" asp-anti-forgery="false" id="frmDate" class="form-inline pull-right">

    <div class="form-group">
        그룹
        <select class="form-control" id="TeamGroup" name="TeamGroup">
            @if (User.IsInRole("Admin"))
            {
                <option value="RedPin">RedPin</option>
                <option value="Family">Family</option>

            }
            else
            {
                <option value="@User.FindFirst("UserGroup").Value">@User.FindFirst("UserGroup").Value</option>

            }
        </select>

    </div>



    <div class="form-group  pull-right">
        <input type="text" readonly class="form-control form_datetime input-sm" style="width:90px;" placeholder="당해년도" id="thisYear" name="thisYear" value="@ViewData["ThisYear"]">
        <button type="button" class="btn btn-warning btn-sm" id="btnSearchMonth"><span class="glyphicon glyphicon-calendar"></span></button>
    </div>


    <div class="btn-toolbar pull-right" style="margin: 0 10px; ">

        <div class="btn-group btn-group-sm">
            <button class="btn btn-info" id="aPrev">이전</button>
            <button class="btn btn-danger" id="aMonth">올해</button>
            <button class="btn btn-info" id="aNext">다음</button>
        </div>
    </div>

</form>


<div class="clearfix"></div>
<hr />


@*/////////////////////////////////////////////////////////////////////////////////////////////////////////////*@

<form asp-action="CalYearAvg">
    <div class="row">

        <table class="type02">
            <thead>
                <tr class="text-center">
                    <th>연번</th>
                    <th>성명</th>
                    @foreach (var item in lstContent)
                    {
                        <th>
                            <a asp-controller="TeamMembers" asp-action="Index"
                               asp-route-id="@item.GameID" target="_blank" class="pagingClick">@item.GameContent</a>
                        </th>
                    }
                    <th>합</th>
                    <th style="width:100px">평균</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int orderNum = 0;  //일련번ㄴ호
                    var lstPeriod = lstContent.Select(c => c.GameContent).ToList();

                }


                @foreach (var groupBowler in Model)
                {
                    orderNum++;
                    int contentNum = 0;   //전체컬럼카우터
                    int emptyNum = 0;// 미참석 컬럼 카운터
                    int indiHap = 0;   // 점수합
                    string styleScore = string.Empty;

                    string BowlerId = string.Empty;

                    <tr style="@(groupBowler.First().InActivity ? "color:#fff;background-color:#808080" : "")">

                        @foreach (var item in groupBowler)
                        {
                            if (BowlerId != item.BowlerID)
                            {
                                BowlerId = item.BowlerID;

                                <td>@orderNum.ToString() @*@(item.InActivity == true ? "탈퇴" : orderNum.ToString())*@</td>
                                <td>
                                    @item.Name
                                <input type="hidden" name="inputName" value="@item.BowlerID" />
                            </td>

                        }

                        var idx = item.Period == null ? lstPeriod.Count() : lstPeriod.IndexOf(item.Period);

                        if (item.Period == null)
                        {
                            //1번도 경기에 참석하지 않았을때
                            for (int i = contentNum; i < idx; i++)
                            {
                                <td style="@(groupBowler.First().InActivity ?"" : "background-color:#eff1ef")"></td>
                                contentNum++;
                                emptyNum++;
                            }
                        }
                        else
                        {
                            //경기에 참석한 경우
                            if (contentNum != idx)
                            {

                                for (int i = contentNum; i < idx; i++)
                                {
                                    <td style="@(groupBowler.First().InActivity ?"" : "background-color:#eff1ef")"></td>
                                    contentNum++;
                                    emptyNum++;
                                }

                            }

                            if (item.monAvg > 199)
                            {
                                styleScore = "text-danger";
                            }


                            <td class="@styleScore">@item.monAvg</td>

                            indiHap += item.monAvg;

                            if (styleScore != string.Empty)
                            {
                                styleScore = string.Empty;
                            }


                            contentNum++;


                        }



                    }

                        @if (contentNum < lstContent.Count)
                        {
                            for (int i = contentNum; i < lstContent.Count; i++)
                            {
                                <td style="@(groupBowler.First().InActivity ?"" : "background-color:#eff1ef")"></td>
                                contentNum++;
                                emptyNum++;

                            }
                        }

                        <td style="@(groupBowler.First().InActivity ?"" : "background-color:aliceblue")">@string.Format("{0:n0}", indiHap) </td>
                        <td class="td-last" style="@(groupBowler.First().InActivity ?"" : "background-color:aliceblue")">
                            @((lstContent.Count - emptyNum == 0) ? 0 : Math.Round(indiHap / Convert.ToDouble(lstContent.Count - emptyNum)))

                            @*관리자일때는 TextBox로 표시*@
                            @if (!User.IsInRole("General"))
                            {
                                <input type="text" name="inputAvg" style="width:40px;@(groupBowler.First().InActivity ? "background-color:#808080" : "")" value="@((groupBowler.First().InActivity ? -1 : 1 )*((lstContent.Count - emptyNum == 0) ? 1 : Math.Round(indiHap / Convert.ToDouble(lstContent.Count - emptyNum))))" />
                                @*탈퇴 표시를 위해 탈퇴자는 음수(-)사용, 탈퇴 0점은 확인이 어려워 1점으로 표시*@
                                @*@groupBowler.First().Name @indiHap @lstContent.Count @emptyNum*@
                            }
                            else
                            {

                                <input type="hidden" name="inputAvg" style="width:40px;" value="@((groupBowler.First().InActivity ? -1 : 1 )*((lstContent.Count - emptyNum == 0) ? 1 : Math.Round(indiHap / Convert.ToDouble(lstContent.Count - emptyNum))))" />
                            }
                        </td>


                    </tr>

                }

            </tbody>
        </table>

        <input type="hidden" name="hteamGroup" value="@ViewBag.TeamGroup" />
        <input type="hidden" name="hthisYear" value="@ViewData["ThisYear"]" />
        @if (User.IsInRole("Manager") || User.IsInRole("Admin"))
        {
            <div class="form-group">
                <input type="submit" value="에버산정" class="btn btn-default" />
                <span class="text-danger">산정하기 전 NaN, 년도별 에버 관리 인원을 확인하세요</span>
            </div>
        }
    </div>
</form>

@section Styles{

    <link href="~/lib/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
}

@section Scripts {
    <script src="~/lib/jquery.cookie/src/jquery.cookie.js"></script>
    <script src="~/lib/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/lib/bootstrap-datetimepicker/js/locales/bootstrap-datetimepicker.ko.js"></script>

    <script>

        $('.form_datetime').datetimepicker({
            language: 'ko',
            weekStart: 0,
            todayBtn: true,
            autoclose: true,
            todayHighlight: true,
            startView: 4,
            forceParse: true,
            format: "yyyy",

            minView: 4


        });



        $("#aPrev").click(function (event) {

            event.preventDefault();
            $("#thisYear").val(parseInt($("#thisYear").val()) - 1);


        });

        $("#aMonth").click(function (event) {
            event.preventDefault();

            $("#thisYear").val(new Date().getFullYear());

        });

        $("#aNext").click(function (event) {

            event.preventDefault();

            $("#thisYear").val(parseInt($("#thisYear").val())+1);

        });


        $(function () {

            $("#TeamGroup").val("@Html.Raw(ViewData["TeamGroup"])");

            $("#btnSearchMonth").click(function () {

                if ($("#startDate").val() == "" || $("#endDate").val() == "") {
                    alert("날짜가 비었습니다.");
                    return;
                }

                if ($("#startDate").val() > $("#endDate").val()) {
                    alert("날짜가 확인하십시오.");
                    return;

                }


                $("#frmDate").submit();



            });

            $(".pagingClick").click(function () {

                $.cookie('PageIndex', "1", { expires: 1, path: '/' });

            });



        });

    </script>

}

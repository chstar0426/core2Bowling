@model IEnumerable<GroupGames>

@{
    ViewData["Title"] = "Index";

    var lstContent = (List<GameTitle>)ViewData["GameContents"];

}


<h2>벌금에버갱신 &nbsp;&nbsp;<small><i class="glyphicon glyphicon-hand-right"></i> 3개월간의 자료로 에버를 갱신합니다.</small></h2>
<hr />



<form asp-action="CalPenaltyAvg" method="get" asp-anti-forgery="false" id="frmDate" class="form-inline pull-right">

    <div class="form-group">
        그룹
        <select class="form-control" id="TeamGroup" name="TeamGroup">
            @if (User.IsInRole("Admin"))
            {
                <option value="RedPin">RedPin</option>
                <option value="Family">Family</option>

            }
            else
            {
                <option value="@User.FindFirst("UserGroup").Value">@User.FindFirst("UserGroup").Value</option>

            }
        </select>

    </div>



    <div class="form-group  pull-right">
        <input type="text" readonly class="form-control form_datetime input-sm" style="width:90px;" placeholder="시작일자" id="startDate" name="startDate" value="@ViewData["StartDate"]"> ~
        <input type="text" readonly class="form-control form_datetime input-sm" style="width:90px;" placeholder="종료일자" id="endDate" name="endDate" value="@ViewData["EndDate"]">
        <button type="button" class="btn btn-warning btn-sm" id="btnSearchMonth"><span class="glyphicon glyphicon-calendar"></span></button>
    </div>


    <div class="btn-toolbar pull-right" style="margin: 0 10px; ">

        <div class="btn-group btn-group-sm">
            <button class="btn btn-info" id="aPrev">이전</button>
            <button class="btn btn-danger" id="aMonth">이번달</button>
            <button class="btn btn-info" id="aNext">다음</button>
        </div>
    </div>

</form>


<div class="clearfix"></div>
<hr />

@*///////////////////////////////////////////////////////////////////////////////////////////*@

<form asp-action="CalPenaltyAvg">
    <div class="row">

        <table class="type02">
            <thead>
                <tr class="text-center">
                    <th>연번</th>
                    <th>성명</th>
                    <th style="width:100px;">@(((int.Parse(ViewData["EndDate"].ToString().Substring(2, 2)) - 1).ToString())) 에바</th>
                    @foreach (var item in lstContent)
                    {
                        <th>
                            <a asp-controller="TeamMembers" asp-action="Index"
                               asp-route-id="@item.GameID" target="_blank" class="pagingClick">@item.GameContent</a>
                        </th>
                    }
                    <th>합</th>
                    <th style="width:100px">평균</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int orderNum = 0;  //일련번ㄴ호
                    int imsiAvg = 0;  //빠진월에대한 전월에버 임시 저장하여 넣어줌

                }


                @foreach (var item in Model)
                {

                    orderNum++;
                    int contentNum = 0;   //전체컬럼카우터
                    int emptyNum = 0;// 미참석 컬럼 카운터
                    int indiHap = 0;   // 점수합
                    string styleScore = string.Empty;

                    imsiAvg = item.beforeAvg;


                    <tr style="@(item.InActivity ? "color:#fff;background-color:#808080" : "")">

                        <td>@orderNum.ToString() @*@(item.InActivity == true ? "탈퇴" : "orderNum.ToString()")*@</td>
                        <td>
                            <span style="@(item.Handicap > 0 ? "color:#ff8c00" : "")">@item.Name</span>
                            <input type="hidden" name="inputName" value="@item.BowlerID" />
                        </td>
                        <td>@item.beforeAvg</td>


                        @if (item.Games == null)
                        {
                            //1번의 경기도하지 않았을때
                            for (int i = 0; i < lstContent.Count; i++)
                            {
                                <td style="@(item.InActivity ? "" : "background-color:#eff1ef")">@imsiAvg</td>
                                indiHap += imsiAvg;
                                contentNum++;
                                if (imsiAvg < 1) { emptyNum++; }

                            }

                        }
                        else
                        {
                            var lstPeriod = lstContent.Select(c => c.GameContent).ToList();
                            // 경기가 있는 경우
                            foreach (var game in item.Games)
                            {

                                var idx = lstPeriod.IndexOf(game.Period);

                                if (contentNum != idx)
                                {

                                    for (int i = contentNum; i < idx; i++)
                                    {
                                        <td style="@(item.InActivity ? "" : "background-color:#eff1ef")">@imsiAvg</td>
                                        indiHap += imsiAvg;
                                        contentNum++;
                                        if (imsiAvg < 1) { emptyNum++; }
                                    }

                                }
                                if (game.monAvg > 199)
                                {
                                    styleScore = "text-danger";
                                }
                                <td class="@styleScore">@game.monAvg</td>
                                indiHap += game.monAvg;

                                contentNum++;
                                if (styleScore != string.Empty)
                                {
                                    styleScore = string.Empty;
                                }

                            }


                        }

                        @if (contentNum < lstContent.Count)
                        {
                            for (int i = contentNum; i < lstContent.Count; i++)
                            {
                                <td style="@(item.InActivity ? "" : "background-color:#eff1ef")">@imsiAvg</td>
                                indiHap += imsiAvg;
                                contentNum++;
                                if (imsiAvg < 1) { emptyNum++; }
                            }

                        }
                        <td style="@(item.InActivity ? "" : "background-color:aliceblue")">@string.Format("{0:n0}", (indiHap)) </td>
                        <td class="td-last" style="@(item.InActivity ? "" : "background-color:aliceblue")">

                            @{
                                int orgAvg = indiHap == 0 ? 0 : (int)(Math.Round(indiHap / Convert.ToDouble(lstContent.Count - emptyNum), MidpointRounding.AwayFromZero));

                                //최하 점수 는 150으로 표기토록 함.
                                int avgRegister = orgAvg;
                                styleScore = string.Empty;

                                if (item.Handicap > 0)
                                {
                                    if (avgRegister >= 190)
                                    {
                                        avgRegister = 190;
                                        styleScore = "text-danger";
                                    }

                                }
                                else
                                {
                                    if (avgRegister >= 200)
                                    {
                                        avgRegister = 200;
                                        styleScore = "text-danger";
                                    }

                                }

                                if (avgRegister < 150)
                                {
                                    avgRegister = 150;
                                }

                            }

                            @*관리자일때는 TextBox로 표시*@
                            @if (!User.IsInRole("General"))
                            {
                                <span class="@styleScore">@orgAvg</span>
                                <input type="text" name="inputAvg" style="width:40px;@(item.InActivity ? "background-color:#808080" : "")" value="@(item.InActivity ? 0:avgRegister)" />
                                @*@item.Name @indiHap @lstContent.Count @emptyNum   --- 검산용*@
                            }
                            else
                            {

                                <span class="@styleScore">@orgAvg</span>
                                @if (orgAvg != avgRegister)
                                {
                                    @:(@avgRegister.ToString())

                                }

                            }

                        </td>


                    </tr>

                }
            </tbody>
        </table>

        <input type="hidden" name="hteamGroup" value="@ViewBag.TeamGroup" />
        <input type="hidden" name="hendDate" value="@ViewData["EndDate"]" />

        @if (User.IsInRole("Manager") || User.IsInRole("Admin"))
        {
            <div class="form-group">
                <input type="submit" value="에버리지 산정" class="btn btn-default" />
            </div>

        }

        <div class="text-danger">
            순위 기준 : 평균(소수반올림) > 출석 > 무핸디 > 하이앤로
        </div>


    </div>
</form>


@section Styles{

    <link href="~/lib/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
}

@section Scripts {
    <script src="~/lib/jquery.cookie/src/jquery.cookie.js"></script>
    <script src="~/lib/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/lib/bootstrap-datetimepicker/js/locales/bootstrap-datetimepicker.ko.js"></script>


    <script>

        $('.form_datetime').datetimepicker({
            language: 'ko',
            weekStart: 0,
            todayBtn: true,
            autoclose: true,
            todayHighlight: true,
            startView: 3,
            forceParse: true,
            format: "yyyy-mm",

            minView: 3

        });

        var leadingZeros = function (date, num) {

            var zero = '';

            if (date==0) {
                date=12
            }
            date = date.toString();


            if (date.length < num) {

                for (i = 0; i < num - date.length; i++)

                    zero += '0';

            }


            return zero + date;

        }

        $("#aPrev").click(function (event) {

            event.preventDefault();
            var now = new Date($("#endDate").val() + "-1");


            //var now = new Date(basicDay);
            var nowMonth = now.getMonth();
            var nowYear = now.getYear() - (nowMonth == 0 ? 1 : 0);
            nowYear += (nowYear < 2000) ? 1900 : 0;

            $("#endDate").val(nowYear + "-" + leadingZeros(nowMonth, 2));


            now.setMonth(now.getMonth() - 2);
            nowMonth = now.getMonth();
            nowYear = now.getYear() - (nowMonth == 0 ? 1 : 0);
            nowYear += (nowYear < 2000) ? 1900 : 0;

            $("#startDate").val(nowYear + "-" + leadingZeros(nowMonth, 2));

        });

        $("#aMonth").click(function (event) {
            event.preventDefault();

            var now = new Date();
            var nowMonth = now.getMonth() + 1;
            var nowYear = now.getYear() - (nowMonth == 0 ? 1 : 0);
            nowYear += (nowYear < 2000) ? 1900 : 0;
            $("#endDate").val(nowYear + "-" + leadingZeros(nowMonth, 2));

            now.setMonth(now.getMonth() - 1 );
            nowMonth = now.getMonth();
            var nowYear = now.getYear() - (nowMonth == 0 ? 1 : 0);  //월이 0으로 표시 년도를 1 빼줌
            nowYear += (nowYear < 2000) ? 1900 : 0;
            $("#startDate").val(nowYear + "-" + leadingZeros(nowMonth, 2));



        });

        $("#aNext").click(function (event) {

            event.preventDefault();
            var now = new Date($("#endDate").val() + "-1");

            now.setMonth(now.getMonth()+2);
            var nowMonth = now.getMonth();
            var nowYear = now.getYear() - (nowMonth == 0 ? 1 : 0);
            nowYear += (nowYear < 2000) ? 1900 : 0;

            $("#endDate").val(nowYear + "-" + leadingZeros(nowMonth, 2));


            now.setMonth(now.getMonth()-2);
            nowMonth = now.getMonth();
            nowYear = now.getYear() - (nowMonth == 0 ? 1 : 0);
            nowYear += (nowYear < 2000) ? 1900 : 0;

            $("#startDate").val(nowYear + "-" + leadingZeros(nowMonth, 2));

        });


        $(function () {

            $("#TeamGroup").val("@Html.Raw(ViewData["TeamGroup"])");

            $("#btnSearchMonth").click(function () {

                if ($("#startDate").val() == "" || $("#endDate").val() == "") {
                    alert("날짜가 비었습니다.");
                    return;
                }

                if ($("#startDate").val() > $("#endDate").val()) {
                    alert("날짜가 확인하십시오.");
                    return;

                }


                $("#frmDate").submit();



            });

            $(".pagingClick").click(function () {

                $.cookie('PageIndex', "1", { expires: 1, path: '/' });
                
            });




        });

    </script>

}

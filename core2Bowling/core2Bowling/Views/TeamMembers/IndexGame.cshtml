@model IOrderedEnumerable<IGrouping<string, core2Bowling.Models.TeamMember>>

@{
    ViewData["Title"] = "Index";
    var game = (Game)ViewData["Game"];
    var teamMember = (IEnumerable<TeamMember>)ViewData["bowlingContext"];

    var gameNum = game.SubGames.Max(s => s.Round);      //전체경기의 최대 Round

    bool sortOrder = (Context.Request.Query["sortOrder"]=="preAvg"?true:false);

    bool fine = game.bFine; //벌금표시

}
<h2>경기결과 &nbsp;&nbsp;<small><i class="glyphicon glyphicon glyphicon-hand-right"></i> 경기결과에 대한 상세 기록입니다</small></h2>
<hr />
<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title">경기개요</h3>
    </div>
    <div class="panel-body">
        <div class="text-danger  pull-left">@game.GameKind  @(string.IsNullOrEmpty(game.GameContent) ? "" : "(" + game.GameContent + ")")</div>
        &nbsp;&nbsp; | &nbsp;&nbsp;  @game.Playtime (@game.Place)
        &nbsp;&nbsp; | &nbsp;&nbsp;  @(game.bFine ? "벌금 있음" : "벌금 없음")
        &nbsp;&nbsp; | &nbsp;&nbsp;  @(game.bHandicap ? "핸디 적용" : "핸디 미적용")
        <div class="pull-right">
            <a asp-action="Index" asp-route-id="@ViewContext.RouteData.Values["Id"]">경기결과</a>
        </div>
        @if (!string.IsNullOrEmpty(game.GameMemo))
        {
                <br />
                <i class="glyphicon glyphicon glyphicon-arrow-right" style="padding-top:15px;"></i> <strong>@game.GameMemo</strong>
        }
    </div>
</div>


<br />

<div class="row">
    <div style="border-bottom: 2px solid #e0dcdc; margin-bottom:0px;" class="col-xs-12"></div>

    <div class="col-xs-@(sortOrder ? 9 : 12)">

       <table class="table">
        <thead>
            <tr class="text-center">
                <th>연번</th>
                <th>팀</th>
                <th>선수</th>
                @for (int i = 0; i < gameNum; i++)
                {
                    <th>
                        @(i + 1)  게임
                    </th>
                 }


                <th>합계</th>
                @{
                    string avgStyle = "text-danger";
                    string preAvgStyle = "";

                    if (sortOrder)
                    {
                        avgStyle = "";
                        preAvgStyle = "text-danger";
                    }



                    if (fine)
                    {
                        <th>
                            <a asp-action="IndexGame" asp-route-Id="@ViewContext.RouteData.Values["Id"]" class="@avgStyle">점수등수</a>
                        </th>
                        <th>
                            <a asp-action="IndexGame" asp-route-Id="@ViewContext.RouteData.Values["Id"]" asp-route-sortOrder="preAvg" class="@preAvgStyle">에버등수</a>
                        </th>
                        <th>벌금</th>

                    }
                    else
                    {
                        <th>평균</th>
                    }

                }

            </tr>
        </thead>
        <tbody>
            @{
                int totalFine = 0;
                int orderNum = 1;

                string[] winBowler = new string [2];
            }
            @foreach (var item in Model)
            {
                int cnt = 1;        //라운드 체크 변수
                int total = 0;
                int perCnt = 1;    //개인 라운드 개수
                int pfine = 0;


                var team = item.SelectMany(s => s.Team.TeamName).Distinct();
                var avg = item.First().Average;
                var lastRound = item.Last().Team.SubGame.Round;   //현재 경기자의 마지막 Round

                var handi = item.First().Bowler.BowlerAverage.Handicap;

                string styleScore = "";

                int imsiAvg = avg;

                string strikeAvg = string.Empty;


                if (avg == 0)
                {
                    strikeAvg = "style=text-decoration:line-through";
                    //strikeText = "text-danger";
                }

                //평균 200이상은 200, 150이하는 150으로 계산
                if (handi == 0 && avg > 199)
                {
                    imsiAvg = 200;
                }
                else if (handi == 15 && avg > 189)
                {
                    imsiAvg = 190;
                }
                else if (avg > 0 && avg < 150)
                {
                    imsiAvg = 150;
                }


                @:<tr @strikeAvg>
                <td>@orderNum</td>

                foreach (var bw in item)
                {
                   
                    styleScore = string.Empty;
                    if (bw.Score - imsiAvg < 0)
                    {
                        styleScore = (fine == false ? "" : "downScore");
                        pfine++;
                    }
                    if (bw.Score > 199)
                    {

                        styleScore = "overScore";
                    }


                    if (cnt == 1)
                    {

                        if (sortOrder && (orderNum == 1 || orderNum == 2))
                        {
                            winBowler[orderNum - 1] = bw.BowlerID;
                        }
                        <td>
                            @foreach (var t in team)
                            {
                                @(t + " ");
                            }
                        </td>
                        <td class="@(handi > 0 ? "text-success" : "")">
                            @Html.DisplayFor(modelItem => bw.Bowler.Name)
                        </td>

                    }

                    if (bw.Team.SubGame.Round == cnt)
                    {
                        <td class="@styleScore">
                            @Html.DisplayFor(modelItem => bw.Score)
                        </td>

                    }
                    else
                    {
                        for (int i = cnt; i < bw.Team.SubGame.Round; i++)
                        {
                            <td>/</td>

                            cnt++;
                        }

                        <td class="@styleScore">
                            @Html.DisplayFor(modelItem => bw.Score)
                        </td>

                    }




                    cnt++;
                    total += bw.Score;

                    
                    @*@if (cnt > gameNum || cnt > item.Count())*@
                    @if (cnt > lastRound)
                    {
                        if (gameNum > item.Count())
                        {
                            for (int i = cnt - 1; i < gameNum; i++)
                            {
                                <td>/</td>
                            }

                        }

                        <td>@total</td>
                        <td>@Math.Round(total / Convert.ToDouble(perCnt)) @(fine==false?"": "(" + avg + ")")</td>

                        if (fine)
                        {
                            <td>@(Math.Round(total / Convert.ToDouble(perCnt)) - avg)</td>
                            <td>@string.Format("{0:n0}", (pfine * 1000))</td>
                        }

                        @:</tr>

                        totalFine = totalFine + pfine;
                     }

                        //위치 중요
                        perCnt++;
                }
                orderNum++;

            }
        </tbody>
    </table>
    </div>


    <div class="@(sortOrder ? "col-xs-3" : "visible-xs")">
        <table class="table">
            <thead>
                <tr class="text-center">
                    <td>하이점수</td>
                </tr>
            </thead>
            <tbody>
                @{int cntItem = 0;
                foreach (var item in teamMember)
                {

                    cntItem++;
                    string classText = (item.Bowler.BowlerAverage.Handicap > 0) ? "text-success" : "";
                    string strikeText = string.Empty;


                    if (item.BowlerID == winBowler[0] || item.BowlerID == winBowler[1])
                    {
                        strikeText = "style=text-decoration:line-through";
                        //strikeText = "text-danger";
                    }

                    <tr>
                        <td class="@classText" @strikeText>
                            @cntItem. @item.Bowler.Name  @string.Format("{0:000}", item.Score)  (@item.Team.SubGame.Round G)
                        </td>
                    </tr>


            }
                }
            </tbody>

        </table>


    </div>
</div>
   

@(fine==false ? "" : "벌금 : " + string.Format("{0:n0}", (totalFine * 1000)))


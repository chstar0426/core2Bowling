@model IOrderedEnumerable<IGrouping<string, core2Bowling.Models.TeamMember>>

@{
    ViewData["Title"] = "Index";
    var game = (Game)ViewData["Game"];
    var teamMember = (IEnumerable<TeamMember>)ViewData["bowlingContext"];
    
    var gameNum = game.SubGames.Max(s => s.Round);

    bool sortOrder = (Context.Request.Query["sortOrder"]=="preAvg"?true:false);
}
<h2>경기결과 &nbsp;&nbsp;<small><i class="glyphicon glyphicon glyphicon-hand-right"></i> 경기결과에 대한 상세 기록입니다</small></h2>
<hr />
<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title">경기개요</h3>
    </div>
    <div class="panel-body">
        <div class="text-danger  pull-left">@game.GameKind  @(string.IsNullOrEmpty(game.GameContent) ? "" : "(" + game.GameContent + ")")</div>
        &nbsp;&nbsp; | &nbsp;&nbsp;  @game.Playtime  &nbsp;&nbsp; | &nbsp;&nbsp; @game.Place
        <div class="pull-right"><a asp-action="Index" asp-route-id="@ViewContext.RouteData.Values["Id"]">경기결과</a></div>
    </div>
</div>


<br />

<div class="row">
    <div style="border-bottom: 2px solid #e0dcdc; margin-bottom:0px;" class="col-xs-12"></div>

    <div class="col-xs-@(sortOrder ? 9 : 12)">

       <table class="table">
        <thead>
            <tr class="text-center">
                <th>연번</th>
                <th>팀</th>
                <th>선수</th>
                @for (int i = 0; i < gameNum; i++)
                {
                    <th>
                        @(i + 1)  게임
                    </th>
                }


                <th>합계</th>
                <th>평균</th>
                @{
                    string avgStyle = "text-danger";
                    string preAvgStyle = "";

                    if (sortOrder)
                    {
                        avgStyle = "";
                        preAvgStyle = "text-danger";
                    }


                    <th>
                        <a asp-action="IndexGame" asp-route-Id="@ViewContext.RouteData.Values["Id"]" class="@avgStyle">점수등수</a>
                    </th>
                    <th>
                        <a asp-action="IndexGame" asp-route-Id="@ViewContext.RouteData.Values["Id"]" asp-route-sortOrder="preAvg" class="@preAvgStyle">에버등수</a>
                    </th>
                }


                <th>벌금</th>

            </tr>
        </thead>
        <tbody>
            @{
                int totalFine = 0;
                int orderNum = 1;

                string[] winBowler = new string [2];
            }
            @foreach (var item in Model)
            {
                int cnt = 1;
                int total = 0;
                int perCnt = 1;
                int fine = 0;


                var team = item.SelectMany(s => s.Team.TeamName).Distinct();
                var avg = item.First().Average;
                var handi = item.First().Bowler.BowlerAverage.Handicap;
                

                @:<tr>
    <td>@orderNum</td>

    foreach (var bw in item)
    {

        string classText = string.Empty;
        if (bw.Score < avg)
        {
            classText = "text-primary";
            fine++;
        }
        if (bw.Score > 199)
        {

            classText = "text-danger";
        }


        if (cnt == 1)
        {

            if (sortOrder && (orderNum == 1 || orderNum == 2))
            {
                winBowler[orderNum - 1] = bw.BowlerID;
            }
            <td>
                @foreach (var t in team)
                {
                    @(t + " ");
                }
            </td>
            <td class="@(handi > 0 ? "text-success" : "")">
                @Html.DisplayFor(modelItem => bw.Bowler.Name)
            </td>

        }

        if (bw.Team.SubGame.Round == cnt)
        {
            <td class="@classText">
                @Html.DisplayFor(modelItem => bw.Score)
            </td>

        }
        else
        {
            for (int i = cnt; i < bw.Team.SubGame.Round; i++)
            {
                <td>/</td>

                cnt++;
            }

            <td class="@classText">
                @Html.DisplayFor(modelItem => bw.Score)
            </td>

        }




        cnt++;
        total += bw.Score;

        @*@if (cnt>item.Count())
                        {
                            if (item.Count() == cnt)
                            {
                                for (int i = cnt; i < gameNum; i++)
                                {
            <link href="~/css/site.min.css" rel="stylesheet" />
                                    <td>ggg</td>

                                }

                            }

                        }*@

        @*@if (cnt > gameNum || cnt > item.Count())*@
        @if (cnt > item.Count())
        {
            if (gameNum > item.Count())
            {
                for (int i = cnt - 1; i < gameNum; i++)
                {
                    <td>/</td>
                }

            }

            <td>@total</td>
            <td>@avg</td>
            <td>@(total / perCnt)</td>
            <td>@((total / perCnt) - avg)</td>
            <td>@string.Format("{0:n0}", (fine * 1000))</td>
            @:</tr>
                    totalFine = totalFine + fine;
                    }

                    //위치 중요
                    perCnt++;


                }
                orderNum++;
            }
        </tbody>
    </table>
    </div>
    <div class="@(sortOrder ? "col-xs-3" : "visible-xs")">
        <table class="table">
            <thead>
                <tr class="text-center">
                    <td>하이점수</td>
                </tr>
            </thead>
            <tbody>
                @{int cntItem = 0;
                foreach (var item in teamMember)
                {

                    cntItem++;
                    string classText = (item.Bowler.BowlerAverage.Handicap > 0) ? "text-success" : "";
                    string strikeText = string.Empty;


                    if (item.BowlerID == winBowler[0] || item.BowlerID == winBowler[1])
                    {
                        strikeText = "style=text-decoration:line-through";
                        //strikeText = "text-danger";
                    }

                    <tr>
                        <td class="@classText" @strikeText>
                            @cntItem. @item.Bowler.Name  @string.Format("{0:000}", item.Score)  (@item.Team.SubGame.Round G)
                        </td>
                    </tr>


            }
                }
            </tbody>

        </table>


    </div>
</div>
   

    벌금 :  @string.Format("{0:n0}", (totalFine * 1000))


@model IEnumerable<core2Bowling.Models.TeamMember>

@{
    ViewData["Title"] = "Index";
    var game = (Game)ViewData["Game"];
    int penalty = game.Penalty;
}
<h2>Index</h2>

<p>
    <a asp-action="CreateTeam" asp-route-id="@game.ID">Create New</a>

</p>
<div>
    @game.Playtime @game.GameKind

</div>
<table class="table">
    <thead>
        <tr class="text-center">
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Team.TeamName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bowler.Name)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Score)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Sequence)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            var round = 0;
            int roundID = 0;
            
            var teamName = string.Empty;
            var downScoreCount = 0;

            string winwin = string.Empty;
            string wingame = string.Empty;

            int maxTeamScore = 0;


         }
        @foreach (var item in Model)
        {
            string styleScore = "";

            if (item.Score > 200)
            {
                styleScore = "overScore";
            }
            else if (item.Score - item.Average < 0)
            {
                styleScore = "downScore";
                downScoreCount++;
            }
        <tr>

            @if (round != item.Team.SubGame.Round)
            {
                teamName = string.Empty;

                round = item.Team.SubGame.Round;

                roundID = Model.Where(m => m.Team.SubGame.Round == round).First().Team.SubGameID;

                var roundCnt = Model.Where(m => m.Team.SubGameID == roundID).Count();

                var listScore = new List<int>();
                var TeamScore = Model.Where(m => m.Team.SubGameID == roundID).GroupBy(t => t.Team.TeamName);

                foreach (var g in TeamScore)
                {
                    var imsi = g.Sum(s=>s.Score);

                    if(g.Key==winwin){
                        imsi-=penalty;

                    }
                    listScore.Add(imsi);
                    

                };

                maxTeamScore = listScore.Max();
                wingame = winwin;

        <td rowspan="@roundCnt">
            @round 게임<br />
            <a asp-action="Edit" asp-route-id="@roundID">점수입력</a>
            <a asp-action="EditTeam" asp-route-id="@roundID">팀수정</a><br />
            <a asp-action="NextTeam" asp-route-id="@roundID">다음경기</a>
            <a asp-action="DelTeam" asp-route-id="@roundID">강제삭제</a>
        </td>
             } @*게임*@


            @if (teamName != item.Team.TeamName)
            {
                teamName = item.Team.TeamName;
                var ieTeam = Model.Where(m => m.Team.SubGameID == roundID && m.Team.TeamName == teamName);

                string selectedRow = "";

                int sScore = ieTeam.Sum(a => a.Score) - (( wingame == item.Team.TeamName) ? penalty : 0);
               
                if (sScore >= maxTeamScore)
                {
                    selectedRow = "success";
                    winwin = item.Team.TeamName;
                   
                }

        <td rowspan="@ieTeam.Count()" class="@selectedRow">
            @teamName @((wingame == item.Team.TeamName) ? "*" : "")<br />
            @sScore @((wingame == item.Team.TeamName) ? "(" + ieTeam.Sum(a => a.Score).ToString() + ")" : "")

            <br /><br />
            @string.Format("{0:n0}", (ieTeam.Where(e => e.Score < e.Average).Count() * 1000))

        </td>

                }

            <td>
                @Html.DisplayFor(modelItem => item.Bowler.Name)


                @Html.DisplayFor(modelItem => item.Average)
                @if (item.Bowler.BowlerAverage.Handicap > 0)
                    {
        @:/ @Html.DisplayFor(modelitm => item.Bowler.BowlerAverage.Handicap)
                    }

            </td>
            <td class="@styleScore">
                @Html.DisplayFor(modelItem => item.Score)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sequence)
            </td>


            <td></td>
        </tr>
        }
    </tbody>
</table>

<a asp-action="NextTeam" asp-route-id="@roundID">다음경기</a>
<a asp-action="DelTeam" asp-route-id="@roundID">강제삭제</a>


<div>벌금 : @string.Format("{0:n0}", downScoreCount * 1000)</div>

@model IEnumerable<core2Bowling.Models.TeamMember>

@{
    ViewData["Title"] = "Edit";
    
    
    //var game = Model.First().Team.SubGame.Game;
    var game = ((SubGame)ViewData["subGame"]).Game;

    int temptc = Model.Select(m => m.Team.TeamName).Distinct().Count();
    int teamCount = temptc > 4 ? 3 : 12/temptc;  //6개 기준

    bool inHandi = game.bHandicap;

}

<h2>점수입력 &nbsp;&nbsp;<small><i class="glyphicon glyphicon glyphicon-hand-right"></i> 각 게임에 대한 상세 기록입니다</small></h2>
<hr />
<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title">경기개요</h3>
    </div>
    <div class="panel-body">
        <div class="text-danger  pull-left">@game.GameKind  @(string.IsNullOrEmpty(game.GameContent) ? "" : "(" + game.GameContent + ")")</div>
        &nbsp;&nbsp; | &nbsp;&nbsp;  @(((SubGame)ViewData["subGame"]).Round) 번째 게임
        &nbsp;&nbsp; | &nbsp;&nbsp;  @game.Playtime (@game.Place)
        &nbsp;&nbsp; | &nbsp;&nbsp;  @(game.bFine ? "벌금 있음" : "벌금 없음")
        &nbsp;&nbsp; | &nbsp;&nbsp;  @(game.bHandicap ? "핸디 적용" : "핸디 미적용")
        &nbsp;&nbsp; | &nbsp;&nbsp;  @(game.bCalTotal ? "총점 계산" : "평균계산") / @game.Penalty 감점
     </div>
</div>


<div class="row">

    <form asp-action="Edit">

    <div asp-validation-summary="All" class="text-danger"></div>
    @{ 
        bool bTeam = false;
        string teamName = string.Empty;

    }

    @*점수부분총괄 시작*@
    <div> 

    @foreach (var item in Model)
    {

        
        if (teamName != item.Team.TeamName)
        {

            if (bTeam == true)
            {
                @:</div>
            }

       
            bTeam = true;
            teamName = item.Team.TeamName;

            @:<div class="col-xs-@teamCount" style="margin-top:15px;border-right:1px solid green" name="teamContainer">
            <p class="text-danger pull-left" style="margin-right:3px;">@(teamName + "팀") </p> 
            <input type="radio" name="optWin" class="optWin pull-left" value="@teamName" disabled />
            <div class="lbltotal pull-right"></div>  @*jquery로 점수 계산됨*@


             @:<hr>



        }


        <div class="form-group">
            <label class="control-label">
                @item.Bowler.Name
                @if (inHandi)
                {
                    if (item.Bowler.BowlerAverage.Handicap > 0)
                    {
                        @:/ @item.Bowler.BowlerAverage.Handicap
                    }

                }
            </label>
            @*점수입력 input, 핸디이력 input을 구분 사용, 점수input 만 전송*@
            <input type="number" name="inputScores" value="@item.Score" class="form-control" />
            <input type="hidden" name="inputHandi" value="@(!inHandi ? 0 :  item.Bowler.BowlerAverage.Handicap)" />
            <span asp-validation-for="@item.Score" class="text-danger"></span>
    
        </div>
    
    }
        
        </div>
    </div>
     @*점수부분총괄 시작*@
   
    <div class="clearfix"></div>

    <div class="text-right">
        <input type="submit" value="Save" class="btn btn-primary" />
        <a class="btn btn-danger" asp-action="Index" asp-route-id="@game.ID" asp-route-game="@(((SubGame)ViewData["subGame"]).Round)">Back to List</a>
    </div>

    </form>
</div>


    @section Scripts {

        <script>

            var changeVal = false;
            
            $(function () {

                
                $("input:radio[name='optWin']").filter('[value="@Context.Request.Query["winTeam"]"]').attr("checked", true);
                
                var nodes = $('div[name="teamContainer"]');

                //alert(nodes.first().attr("style"));

                nodes.each(function () {

                    var tot = 0;
                    var cnt = 0;

                    var nums = $(this).children().find('input[type=number]');
                    
                    nums.each(function () {
                        tot = tot + Number($(this).val());
                        cnt++;

                    });

                    var node = $(this).children('.lbltotal');
                    //alert(node.attr("class"));
                    var radio = $(this).children('.optWin');
                    //alert(radio.is(':checked'));

                    if (radio.is(':checked')) {
                        tot = tot - "@game.Penalty";
                    }
                    
                    if ("@game.bCalTotal"=="True") {
                        node.text(Math.round(tot));
                    }
                    else {
                        node.text(Math.round(tot / cnt));
                    }       
                    //alert(tot);
                });
            

            });

            $(document).on("change", "input[name=inputScores]", function () {
                   
                changeVal = true;
                var tot = 0;
                var cnt = 0;
                var nodes = $(this).parent().parent().children().find('input[type=number]');

                    
                $(this).val($(this).val()==0 ? 0 : Number($(this).val()) + Number($(this).next().val()));

                //alert($(this).next().attr("type"));
                //alert(nodes.first().attr("type"));

                nodes.each(function () {
                    tot = tot + Number($(this).val());
                    cnt++;

                });

                //alert(cnt);
                //alert(tot);

                var node = $(this).parent().parent().children('.lbltotal');
                //alert(node.attr("class"));
                var radio = $(this).parent().parent().children('.optWin');
                //alert(radio.is(':checked'));
                    
                if (radio.is(':checked')) {
                    tot = tot - "@game.Penalty";
                }

                //alert(tot);

                if ("@game.bCalTotal") {
                    node.text(Math.round(tot));
                }
                else {
                    node.text(Math.round(tot / cnt));
                }
                    

            });


            $(document).on("focus", "input[name=inputScores]", function () {

                $(this).val(Number($(this).val()) - Number($(this).next().val()));
                    
                    
            });


            $(document).on("blur", "input[name=inputScores]", function () {

                //이벤트 순서가 change 발생후 blur가 발생함
                if (changeVal) {
                    changeVal = false;
                }
                else {
                    $(this).val(Number($(this).val()) + Number($(this).next().val()));
                }
                   
            });

            // 사용치 않음,  radio의 disabled 를 삭제한 후 사용하면 정상작동 됨되
            $(document).on("change", "input[name=optWin]", function () {

                
                var nodes = $(this).parent().parent().children('div[name="teamContainer"]'); 
                //alert(nodes.first().attr("style"));

                nodes.each(function () {
                    var tot = 0;
                    var cnt = 0;

                    var nums = $(this).children().find('input[type=number]');

                    nums.each(function () {
                        tot = tot + Number($(this).val());
                        cnt++;

                    });

                    var node = $(this).children('.lbltotal');
                    //alert(node.attr("class"));
                    var radio = $(this).children('.optWin');
                    //alert(radio.is(':checked'));

                    if (radio.is(':checked')) {
                        tot = tot - "@game.Penalty";
                    }
                     if ("@game.bCalTotal"=="True") {
                        node.text(Math.round(tot));
                    }
                    else {
                        node.text(Math.round(tot / cnt));

                    }       
                    //alert(tot);
                });
                    

            });

            
        </script>


        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }

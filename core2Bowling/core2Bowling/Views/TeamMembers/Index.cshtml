@model IEnumerable<core2Bowling.Models.TeamMember>

@{
    ViewData["Title"] = "Index";
    var game = (Game)ViewData["Game"];
    int queryGame = Context.Request.Query["game"].ToString() == "" ? 1 : Convert.ToInt32(Context.Request.Query["game"]);

}
<h2>Index</h2>

<p>
    <a asp-action="CreateTeam" asp-route-id="@game.ID">Create New</a>

</p>
<div>
    @game.Playtime @game.GameKind

</div>

<div class="tabbable-panel">
    <div class="tabbable-line">
        <ul class="nav nav-tabs ">

            @for (int i = 1; i < game.SubGames.Count() + 1; i++)
            {
                string selectActive = string.Empty;
                if (i == queryGame)
                {
                    selectActive = "active";
                }
                <li class="@selectActive">
                    <a href="#tab_game_@i" data-toggle="tab">
                        @i  경기
                    </a>
                </li>

            }

        </ul>
        <div class="tab-content">

            @{
                int teamSequence = -1;
                int round = 0;

                string teamName = string.Empty;
                int roundID = 0;
                int colcnt = 0;
                int downScoreCount = 0;
                int downScoreTotal = 0;

                string winwin = string.Empty;
                string winNext = string.Empty;

            }

            @foreach (var item in Model)
            {


                if (round != item.Team.SubGame.Round)
                {
                    if (round > 0)
                    {

                        @:</tr><tr>
                            <td colspan="@(colcnt * 2)">
                                <a asp-action="Edit" asp-route-id="@roundID">점수입력</a> |
                                <a asp-action="EditTeam" asp-route-id="@roundID">팀수정</a> |
                                <a asp-action="NextTeam" asp-route-id="@roundID">다음경기</a> |
                                <a asp-action="DelTeam" asp-route-id="@roundID">경기삭제</a> //
                                @string.Format("{0:n0}", (downScoreCount * 1000))
                            </td>
                            @:</tr></table></div>

                        downScoreCount = 0;

                    }


                    round = item.Team.SubGame.Round;

                    string selectActive = string.Empty;
                    if (round == queryGame)
                    {
                        selectActive = "active";
                    }

                @:<div class="tab-pane @selectActive" id="tab_game_@round"><table class="table table-bordered">

                    teamName = string.Empty;

                    roundID = Model.Where(m => m.Team.SubGame.Round == round).First().Team.SubGameID;

                    var listScore = new List<int>();

                    var TeamScore = Model.Where(m => m.Team.SubGameID == roundID).GroupBy(t => t.Team.TeamName);
                    colcnt = TeamScore.Count();    /* 팀수*/


                    foreach (var g in TeamScore)
                    {
                        var imsi = g.Sum(a => a.Score);
                       
                        if (g.Key==winwin)
                        {
                            imsi -= 100;
                        }
                        listScore.Add(imsi);

                    };
                    
                    int maxTeamScore = listScore.Max();

                        <tr>
                            @{
                                
                                string winPre = string.Empty;
                               

                                winPre = winNext;

                             }
                            @foreach (var s in TeamScore)
                            {
                                string selectedRow = "";
                                
                                int sScore = s.Sum(a => a.Score) - ((winPre == s.Key) ? 100 : 0);


                                if (sScore >= maxTeamScore)
                                {
                                    selectedRow = "success";
                                    winNext = s.Key;
                                    winwin = s.Key;
                                }
                                <td colspan="2" class="@selectedRow text-center">
                                    @s.Key ( @sScore 점) @((winPre==s.Key) ? "*":"")
                                </td>

                              
                            }

                        </tr>

                        
                    
                }


                string styleScore = "";

                if (item.Score > 200)
                {
                    styleScore = "overScore";
                }
                else if (item.Score - item.Bowler.BowlerAverage.Average < 0)
                {
                    styleScore = "downScore";
                    downScoreCount++;
                    downScoreTotal++;
                }


                if (item.Sequence != teamSequence)
                {
                    if (teamSequence > -1)
                    {
                            @:</tr>
                        }

                        teamSequence = item.Sequence;
                        @:<tr>
                        
                        }

                        <td>
                            @Html.DisplayFor(modelItem => item.Bowler.Name)

                            (@Html.DisplayFor(modelItem => item.Bowler.BowlerAverage.Average)
                            @if (item.Bowler.BowlerAverage.Handicap > 0)
                            {
                                @:/ @Html.DisplayFor(modelitm => item.Bowler.BowlerAverage.Handicap)
                            })
                        </td>
                        <td class="@styleScore">@item.Score</td>
                        @*<td>@item.Sequence</td>*@


                    }

        </tr>
        @*마지막테이블 종료*@
        <tr>
            <td colspan="@(colcnt*2)">
                <a asp-action="Edit" asp-route-id="@roundID">점수입력</a> |
                <a asp-action="EditTeam" asp-route-id="@roundID">팀수정</a> |
                <a asp-action="NextTeam" asp-route-id="@roundID">다음경기</a> |
                <a asp-action="DelTeam" asp-route-id="@roundID">경기삭제</a> //
                @string.Format("{0:n0}", (downScoreCount * 1000))

            </td>
        </tr>
    </table>



</div>
</div>
</div>

@string.Format("{0:n0}", (downScoreTotal * 1000))


@section Styles {
    <link href="~/css/tabCss.css" rel="stylesheet">
}
